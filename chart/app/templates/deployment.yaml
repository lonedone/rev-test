apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
    spec:
      containers:
        - name: test-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 8080
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - name: DB_USERNAME
              value: "{{ .Values.env.DB_USERNAME }}"
            - name: DB_PASSWORD
              value: "{{ .Values.env.DB_PASSWORD }}"
            - name: DB_HOST
              value: "{{ .Values.env.DB_HOST }}"
            - name: DB_NAME
              value: "{{ .Values.env.DB_NAME }}"
            - name: DB_PORT
              value: "{{ .Values.env.DB_PORT }}"
            - name: NODE_ENV
              value: "{{ .Values.env.NODE_ENV }}"
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
